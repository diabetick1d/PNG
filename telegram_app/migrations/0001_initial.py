# Generated by Django 4.1.7 on 2023-08-02 06:46

import django.contrib.auth.models
from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="Order",
            fields=[
                (
                    "uid",
                    models.AutoField(
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        verbose_name="Номер заказа",
                    ),
                ),
                (
                    "number_order",
                    models.CharField(
                        editable=False,
                        max_length=12,
                        unique=True,
                        verbose_name="Номер заказа отформатированный",
                    ),
                ),
                (
                    "tracknumber",
                    models.CharField(
                        blank=True,
                        max_length=120,
                        null=True,
                        verbose_name="Номер отслеживания",
                    ),
                ),
                (
                    "status_order",
                    models.CharField(
                        choices=[
                            ("ordered", "Заказано"),
                            ("sent", "Отправлено"),
                            ("delivered_in_russian", "Доставлено в Россию"),
                            ("in_stock", "На складе"),
                            ("sent_from_stock", "Отправлено со склада"),
                            ("delivered_to_point", "Доставлено в пункт"),
                            ("received ", "Получено"),
                        ],
                        default="ordered",
                        max_length=40,
                        verbose_name="Статус заказа",
                    ),
                ),
                (
                    "type_delivery",
                    models.CharField(
                        max_length=40, verbose_name="Способ доставки заказа"
                    ),
                ),
                (
                    "promocode",
                    models.CharField(
                        blank=True,
                        max_length=40,
                        null=True,
                        verbose_name="Промокод при оформлении заказа",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(max_length=40, verbose_name="Имя получателя"),
                ),
                (
                    "last_name",
                    models.CharField(max_length=40, verbose_name="Фамилия получателя"),
                ),
                (
                    "surname",
                    models.CharField(max_length=40, verbose_name="Отчество получателя"),
                ),
                (
                    "number_phone",
                    models.CharField(
                        max_length=20, verbose_name="Номер телефона получателя"
                    ),
                ),
                (
                    "adress",
                    models.CharField(max_length=120, verbose_name="Адрес доставки"),
                ),
                (
                    "delivery_point",
                    models.CharField(max_length=90, verbose_name="Адрес пункта выдачи"),
                ),
                ("cart_order", models.JSONField(verbose_name="Товары в заказе")),
                (
                    "summ_price",
                    models.CharField(max_length=40, verbose_name="Сумма заказа"),
                ),
                (
                    "client",
                    models.IntegerField(verbose_name="id покупателя в telegram"),
                ),
                (
                    "data_order",
                    models.DateField(auto_now_add=True, verbose_name="Дата заказа"),
                ),
            ],
            options={
                "verbose_name": "Заказ",
                "verbose_name_plural": "Заказы",
            },
        ),
        migrations.CreateModel(
            name="Promocode",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("promocode", models.CharField(max_length=40, verbose_name="Промокод")),
                (
                    "count",
                    models.IntegerField(
                        default=99999, verbose_name="Кол-во использований"
                    ),
                ),
                ("price", models.IntegerField(verbose_name="Скидка")),
                (
                    "description",
                    models.TextField(blank=True, null=True, verbose_name="Описание"),
                ),
            ],
            options={
                "verbose_name": "Промокод",
                "verbose_name_plural": "Промокоды",
            },
        ),
        migrations.CreateModel(
            name="Returns",
            fields=[
                (
                    "number_order",
                    models.CharField(
                        auto_created=True,
                        editable=False,
                        max_length=12,
                        verbose_name="Номер заказа от которого идет возврат",
                    ),
                ),
                (
                    "uid",
                    models.AutoField(
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        verbose_name="Номер Возврата",
                    ),
                ),
                (
                    "status_return",
                    models.CharField(
                        choices=[
                            ("return_1", "Возврат"),
                            ("return_2", "Оформление возврата"),
                            ("return_3", "Возврат оформлен"),
                        ],
                        default="return_1",
                        max_length=40,
                        verbose_name="Статус заказа",
                    ),
                ),
                (
                    "promocode",
                    models.CharField(
                        blank=True,
                        max_length=40,
                        null=True,
                        verbose_name="Промокод при оформлении заказа",
                    ),
                ),
                ("cart_return", models.JSONField(verbose_name="Товары в возврате")),
                (
                    "summ_price",
                    models.CharField(max_length=40, verbose_name="Сумма возврата"),
                ),
                (
                    "card_number",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="Номер заказа"
                    ),
                ),
                (
                    "bank",
                    models.CharField(
                        blank=True,
                        max_length=40,
                        null=True,
                        verbose_name="Банк получателя",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True, max_length=90, null=True, verbose_name="Получатель"
                    ),
                ),
                (
                    "client",
                    models.IntegerField(verbose_name="id покупателя в telegram"),
                ),
                (
                    "data_order",
                    models.DateField(auto_now_add=True, verbose_name="Дата заказа"),
                ),
                (
                    "data_return",
                    models.DateField(auto_now_add=True, verbose_name="Дата возврата"),
                ),
            ],
        ),
        migrations.CreateModel(
            name="support_query_model",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "userid",
                    models.IntegerField(
                        blank=True,
                        null=True,
                        verbose_name="id пользователя в телеграмм",
                    ),
                ),
                (
                    "chatid",
                    models.IntegerField(blank=True, null=True, verbose_name="id чата"),
                ),
                ("text", models.TextField(blank=True, verbose_name="Обращение")),
                ("text_requet", models.TextField(blank=True, verbose_name="Ответ")),
                (
                    "checked",
                    models.BooleanField(default=False, verbose_name="Проверенно?"),
                ),
            ],
            options={
                "verbose_name": "Обращение",
                "verbose_name_plural": "Обращения",
            },
        ),
        migrations.CreateModel(
            name="User",
            fields=[
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="email address"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "uid",
                    models.IntegerField(
                        blank=True,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                        verbose_name="id в телеграмме",
                    ),
                ),
                ("first_name", models.CharField(max_length=41, verbose_name="Имя")),
                ("last_name", models.CharField(max_length=41, verbose_name="Фамилия")),
                ("surname", models.CharField(max_length=41, verbose_name="Отчество")),
                (
                    "username",
                    models.CharField(
                        max_length=41, unique=True, verbose_name="@username в tg"
                    ),
                ),
                (
                    "base_type_deliver",
                    models.BooleanField(
                        default="False", verbose_name="Способ доставки заказа"
                    ),
                ),
                (
                    "base_adress",
                    models.TextField(
                        blank=True, verbose_name="Стандартный адрес доставки"
                    ),
                ),
                (
                    "base_delivery_point",
                    models.TextField(
                        blank=True, verbose_name="Стандартный адрес СДЭКа"
                    ),
                ),
                (
                    "base_number_phone",
                    models.CharField(
                        blank=True, max_length=21, verbose_name="Номер телефона"
                    ),
                ),
                (
                    "up_to_politic",
                    models.BooleanField(
                        default="False", verbose_name="Пользовательское соглашение"
                    ),
                ),
                (
                    "bonus_reference",
                    models.CharField(
                        blank=True,
                        max_length=50,
                        unique=True,
                        verbose_name="Ссылка для бонус систем",
                    ),
                ),
                (
                    "bonus",
                    models.CharField(
                        blank=True,
                        max_length=24,
                        verbose_name="От кого зарегался бонус систем",
                    ),
                ),
                (
                    "bonus_number",
                    models.IntegerField(
                        blank=True,
                        null=True,
                        verbose_name="Кол-во подтвержденных приглашенный пользователей",
                    ),
                ),
                (
                    "favorite",
                    models.JSONField(
                        default=list, verbose_name="Избранное пользователя"
                    ),
                ),
                (
                    "cart",
                    models.JSONField(default=dict, verbose_name="Корзина пользователя"),
                ),
                (
                    "list_buy",
                    models.JSONField(
                        blank=True, null=True, verbose_name="Возвраты пользователя"
                    ),
                ),
                (
                    "list_returns",
                    models.JSONField(
                        blank=True, null=True, verbose_name="Возвраты пользователя"
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Группы, к которым принадлежит этот пользователь. Пользователь получит все разрешения, предоставленные каждой из его групп.",
                        related_name="%(app_label)s_%(class)s_groups",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="Группы",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="разрешения для этого пользователя.",
                        related_name="%(app_label)s_%(class)s_user_permissions",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="разрешения пользователя",
                    ),
                ),
            ],
            options={
                "verbose_name": "Пользователь",
                "verbose_name_plural": "Пользователя",
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
